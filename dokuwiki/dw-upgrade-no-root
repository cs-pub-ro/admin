#!/bin/bash

#
# Upgrade DokuWiki installation.
# The script generates a backup. Unlike its "root-enabled" couterpart
#   the backup is not accessible because of its access rights.
#
# 2009-2011, Razvan Deaconescu, razvan.deaconescu@cs.pub.ro
#

# Read functions.
source common

if test $# -ne 3; then
	err "DokuWiki upgrade script"
	err "  $0 installation-directory download-url backup-directory"
	exit 1
fi

install_dir="$1"
download_url="$2"
backup_dir="$3"
log=$(mktemp)
working_dir=$(mktemp -d)

# Check access rights, directory existence.
if ! test -d "$install_dir"; then
    err "Error: $install_dir is not a folder"
    exit 1
fi

if ! test -d "$backup_dir"; then
    err "Error: $backup_dir is not a folder"
    exit 1
fi

echo ""
echo "* Logging information to $log."

# Install and configure Dokuwiki.
pushd "$working_dir" > /dev/null
echo -n "  * Downloading DokuWiki ... "
install_dokuwiki "$download_url"
echo "done."
popd > /dev/null

backup="$backup_dir"/"dokuwiki-bak-$(date +%Y-%m-%d)"
echo -n " * Backing up Dokuwiki instance to $backup ... "
'cp' -a "$install_dir" "$backup"
chown "$dokuwiki_user":"$dokuwiki_group" "$backup"
echo "done"

echo -n " * Upgrading Dokuwiki installation in $install_dir ... "
'cp' -fr "$working_dir"/* "$install_dir"
echo "done"

# Install plugins.
pushd $install_dir/lib/plugins/ > /dev/null
echo "* Installing plugins"

echo -n "  * Installing plugin: Creole ... "
install_plugin_creole
echo "done."

echo -n "  * Installing plugin: Google Analytics ... "
install_plugin_googleanalytics
echo "done."

echo -n "  * Installing plugin: Include ... "
install_plugin_include
echo "done."

echo -n "  * Installing plugin: Index-Menu ... "
install_plugin_indexmenu
echo "done."

echo -n "  * Installing plugin: Display-Wiki-Page ..."
install_plugin_displaywikipage
echo "done."

popd > /dev/null

# Install authentication backends.
pushd $install_dir > /dev/null
echo -n "  * Installing ggauth backend ..."
install_ggauth
echo "done."
popd > /dev/null

echo ""

exit 0
